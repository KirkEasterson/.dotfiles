set $mod Mod4

set $left h
set $down j
set $up k
set $right l

set $term wezterm
set $menu wofi

set $background ~/.config/wall.png

output * bg $background fill

font pango:Ubuntu Nerd Font 12

### DISPLAY SETTINGS
output eDP-1 scale 1.25

# clamshell mode
set $laptop eDP-1
bindswitch --reload --locked lid:on output $laptop disable
bindswitch --reload --locked lid:off output $laptop enable
exec_always ./clamshell.sh

# borders
default_border pixel 2
default_floating_border normal

# gaps
smart_gaps on
gaps inner 10
gaps outer 10

exec swayidle -w \
         timeout 300 'swaylock -f -c 000000' \
         timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
         before-sleep 'swaylock -f -c 000000'

  input "2:10:TPPS/2_Elan_TrackPoint" {
      dwt enabled # what is this?
      tap enabled
      natural_scroll enabled
      middle_emulation enabled
      accel_profile "flat"
      pointer_accel 0
  }

  input "1267:12679:ELAN0672:00_04F3:3187_Touchpad" {
      tap enabled
      natural_scroll enabled
      middle_emulation enabled
      accel_profile "flat"
      pointer_accel 0
  }

  input "ELAN0672:00 04F3:3187 Mouse" {
      natural_scroll enabled
      middle_emulation enabled
      accel_profile "flat"
      pointer_accel 0
  }

  input "1149:32891:Kensington_Orbit_Fusion_Wireless_Trackball" {
      natural_scroll enabled
      middle_emulation enabled
      accel_profile "flat"
      pointer_accel 0
  }

  input "type:keyboard" {
      xkb_layout us,no,se
      xkb_variant ,nodeadkeys
      xkb_options caps:escape
      # xkb_file ~/.config/xkb/custom # TODO: make this file
  }

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

    # brightness keys
	bindsym --locked XF86MonBrightnessDown exec brightnessctl set 5%-
	bindsym --locked XF86MonBrightnessUp exec brightnessctl set 5%+

	# volume controls
	bindsym --locked XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
	bindsym --locked XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
	bindsym --locked XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
	bindsym --locked XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle

	# media keys
	bindsym --locked XF86AudioPlay exec playerctl play-pause
	bindsym --locked XF86AudioStop exec playerctl stop
	bindsym --locked XF86AudioPrev exec playerctl prev
	bindsym --locked XF86AudioNext exec playerctl next

#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
	bindsym $mod+1 [workspace="1"] move workspace to output current; workspace number 1
	bindsym $mod+2 [workspace="2"] move workspace to output current; workspace number 2
	bindsym $mod+3 [workspace="3"] move workspace to output current; workspace number 3
	bindsym $mod+4 [workspace="4"] move workspace to output current; workspace number 4
	bindsym $mod+5 [workspace="5"] move workspace to output current; workspace number 5
	bindsym $mod+6 [workspace="6"] move workspace to output current; workspace number 6
	bindsym $mod+7 [workspace="7"] move workspace to output current; workspace number 7
	bindsym $mod+8 [workspace="8"] move workspace to output current; workspace number 8
	bindsym $mod+9 [workspace="9"] move workspace to output current; workspace number 9
	bindsym $mod+0 [workspace="10"] move workspace to output current; workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# bar {
#     position top
#
#     # When the status_command prints a new line to stdout, swaybar updates.
#     # The default just shows the current date and time.
#     status_command while date +'%a %d %b %Y %T'; do sleep 1; done
#
#     colors {
#         statusline #ffffff
#         background #323232
#         inactive_workspace #32323200 #32323200 #5c5c5c
#     }
# }
exec_always ~/.config/waybar/waybar.sh

include @sysconfdir@/sway/config.d/*
