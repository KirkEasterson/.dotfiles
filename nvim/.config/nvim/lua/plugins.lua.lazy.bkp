local lazypath = vim.fn.stdpath("data") .. "/lazy/lazy.nvim"
if not vim.loop.fs_stat(lazypath) then
	vim.fn.system({
		"git",
		"clone",
		"--filter=blob:none",
		"https://github.com/folke/lazy.nvim.git",
		"--branch=stable", -- latest stable release
		lazypath,
	})
end
vim.opt.rtp:prepend(lazypath)

vim.g.mapleader = ' ' -- prefix key
vim.g.maplocalleader = ' ' -- secondary prefix key

require('lazy').setup({
	{
		'lewis6991/impatient.nvim',
		config = function() require("kirk.impatient") end,
	},

	-- a e s t h e t i c
	'ellisonleao/gruvbox.nvim', -- OG nvim gruvbox
	{
		'luisiacc/gruvbox-baby',
		config = function() require("kirk.gruvbox") end,
	},
	{
		'nvim-lualine/lualine.nvim',
		dependencies = { 'nvim-tree/nvim-web-devicons', opt = true },
		config = function() require("kirk.lualine") end,
	},
	{
		'echasnovski/mini.nvim',
		branch = 'main',
		config = function() require("kirk.mini") end,
	},
	'nvim-tree/nvim-web-devicons', -- this shouldn't be necessary
	{
		'romgrk/barbar.nvim',
		dependencies = {
			'nvim-tree/nvim-web-devicons'
		},
		config = function() require("kirk.barbar") end,
	},
	{
		'goolord/alpha-nvim',
		dependencies = {
			'nvim-tree/nvim-web-devicons',
			'BlakeJC94/alpha-nvim-fortune',
		},
		config = function() require("kirk.alpha") end,
	},
	{
		"utilyre/barbecue.nvim",
		version = "*",
		dependencies = {
			"neovim/nvim-lspconfig",
			"SmiteshP/nvim-navic",
			"nvim-tree/nvim-web-devicons", -- optional dependency
		},
		config = function() require("kirk.barbecue") end,
	},

	-- lsp
	'williamboman/mason.nvim',
	'williamboman/mason-lspconfig.nvim',
	{
		'neovim/nvim-lspconfig',
		config = function() require("kirk.lsp.lsp") end,
	},
	'nvim-treesitter/nvim-treesitter-context',
	'nvim-treesitter/nvim-treesitter-refactor',
	'nvim-treesitter/nvim-treesitter-textobjects',
	{
		'nvim-treesitter/nvim-treesitter',
		dependencies = {
			'nvim-treesitter/nvim-treesitter-context',
			'nvim-treesitter/nvim-treesitter-refactor',
			'nvim-treesitter/nvim-treesitter-textobjects',
		},
		build = function()
			require('nvim-treesitter.install').update({ with_sync = true })
		end,
		config = function() require("kirk.treesitter") end,
	},
	{
		'jose-elias-alvarez/null-ls.nvim',
		config = function() require("kirk.null-ls") end,
	},
	{
		'theHamsta/nvim-semantic-tokens',
		config = function() require("kirk.lsp.semantic_tokens") end,
	},
	{
		'm-demare/hlargs.nvim',
		dependencies = {
			'nvim-treesitter/nvim-treesitter',
		},
		config = function() require("kirk.lsp.hlargs") end,
	},
	{
		'stevearc/aerial.nvim',
		config = function() require("kirk.lsp.aerial") end,
	},

	-- completion
	"hrsh7th/cmp-buffer",
	"hrsh7th/cmp-nvim-lsp",
	"hrsh7th/cmp-path",
	"onsails/lspkind.nvim",
	"saadparwaiz1/cmp_luasnip",
	{
		'hrsh7th/nvim-cmp',
		dependencies = {
			"hrsh7th/cmp-buffer",
			"hrsh7th/cmp-nvim-lsp",
			"hrsh7th/cmp-path",
			"onsails/lspkind.nvim",
			"saadparwaiz1/cmp_luasnip",
		},
		config = function() require("kirk.lsp.completion") end,
	},

	-- snippets
	{
		'L3MON4D3/LuaSnip',
		dependencies = { "rafamadriz/friendly-snippets" },
		config = function() require("kirk.snippets.snippets") end,
	},

	-- telescope
	'nvim-lua/plenary.nvim',
	'nvim-telescope/telescope-fzy-native.nvim',
	{
		'ThePrimeagen/git-worktree.nvim',
		config = function() require("kirk.git.git-worktree") end,
	},
	{
		'nvim-telescope/telescope.nvim',
		dependencies = {
			'nvim-lua/plenary.nvim',
			'nvim-telescope/telescope-fzy-native.nvim',
			'ThePrimeagen/git-worktree.nvim',
			-- 'folke/noice.nvim',
		},
		config = function() require("kirk.telescope") end,
	},

	-- git
	{
		'kdheepak/lazygit.nvim',
		config = function() require("kirk.lazygit") end,
	},
	{
		'lewis6991/gitsigns.nvim',
		config = function() require("kirk.gitsigns") end,
	},
	{
		'pwntester/octo.nvim',
		dependencies = {
			'nvim-lua/plenary.nvim',
			'nvim-telescope/telescope.nvim',
			'nvim-tree/nvim-web-devicons',
		},
		config = function() require("kirk.octo") end,
	},

	-- general utility
	{
		'rmagatti/auto-session',
		config = function() require("kirk.auto_session") end,
	},
	{
		'numToStr/Comment.nvim',
		config = function() require("kirk.comment") end,
	},
	{
		'windwp/nvim-autopairs',
		config = function() require("kirk.autopairs") end,
	},
	-- 'mbbill/undotree',
	{
		'lukas-reineke/indent-blankline.nvim',
		config = function() require("kirk.indent") end,
	},
	{
		'kevinhwang91/nvim-ufo',
		dependencies = 'kevinhwang91/promise-async',
		config = function() require("kirk.ufo") end,
	},


	-- language specific, because I'm lazy
	{
		'simrat39/rust-tools.nvim',
		dependencies = {
			'nvim-lua/plenary.nvim',
		},
		config = function() require("kirk.lsp.rust") end,
	},
	{
		'jose-elias-alvarez/nvim-lsp-ts-utils',
		config = function() require("kirk.lsp.ts") end,
	},
	{
		'euclidianAce/BetterLua.vim',
		config = function() require("kirk.lsp.nlua") end,
	},

	-- misc
	{
		"folke/trouble.nvim",
		dependencies = "nvim-tree/nvim-web-devicons",
		config = function() require("kirk.trouble") end,
	},
	{
		'nvim-tree/nvim-tree.lua',
		dependencies = {
			'nvim-tree/nvim-web-devicons',
		},
		config = function() require("kirk.nvim-tree") end,
	},
	{
		'sindrets/winshift.nvim',
		config = function() require("kirk.winshift") end,
	},
	{
		'monaqa/dial.nvim',
		config = function() require("kirk.dial") end,
	},
	{
		'aserowy/tmux.nvim',
		config = function() require("kirk.tmux-nvim") end,
	},
	{
		"folke/todo-comments.nvim",
		dependencies = "nvim-lua/plenary.nvim",
		config = function() require("kirk.todo-comments") end,
	},
	{
		"nvim-zh/colorful-winsep.nvim",
		config = function() require("kirk.colorful-winsep") end,
	},
	'tamton-aquib/duck.nvim',
	{
		"eandrju/cellular-automaton.nvim",
		config = function() require("kirk.cellular-automaton") end,
	},
	-- {
	-- 	'lervag/vimtex',
	-- 	config = function() require("kirk.vimtex") end,
	-- },
	{
		'kamykn/spelunker.vim',
		config = function() require("kirk.spelunker") end,
	},
	{
		"iamcco/markdown-preview.nvim",
		build = function() vim.fn["mkdp#util#install"]() end,
		config = function() require("kirk.markdown-preview") end,
	},
	-- {
	-- 	"jackMort/ChatGPT.nvim",
	-- 	config = function()
	-- 		require("chatgpt").setup({
	-- 			welcome_message = "",
	-- 		})
	-- 	end,
	-- 	dependencies = {
	-- 		"MunifTanjim/nui.nvim",
	-- 		"nvim-lua/plenary.nvim",
	-- 		"nvim-telescope/telescope.nvim"
	-- 	}
	-- },
})
